#!/bin/bash

# Specify the tag key and value you want to search for
tag_key="your-tag-key"
tag_value="your-tag-value"

# Specify the number of days threshold for unassigned snapshots
days_threshold=10

# Retrieve snapshots with the specified tag
snapshots=$(aws ec2 describe-snapshots --filters "Name=tag:${tag_key},Values=${tag_value}" --query 'Snapshots[].{ID: SnapshotId, VolumeID: VolumeId, StartTime: StartTime}' --output text)

# Identify unassigned snapshots created before the threshold
unassigned_snapshots=()
current_time=$(date +%s)
for snapshot in $snapshots; do
    snapshot_id=$(echo "$snapshot" | awk '{print $1}')
    volume_id=$(echo "$snapshot" | awk '{print $2}')
    start_time=$(echo "$snapshot" | awk '{print $3}')
    start_time_epoch=$(date -d "$start_time" +%s)
    age_in_days=$(( (current_time - start_time_epoch) / 86400 ))
    
    if [ -z "$volume_id" ] && [ $age_in_days -ge $days_threshold ]; then
        unassigned_snapshots+=("$snapshot_id")
    fi
done

# Delete unassigned snapshots with error handling
for snapshot_id in "${unassigned_snapshots[@]}"; do
    echo "Deleting snapshot: $snapshot_id"
    aws ec2 delete-snapshot --snapshot-id "$snapshot_id"
    if [ $? -eq 0 ]; then
        echo "Snapshot deleted: $snapshot_id"
    else
        echo "Failed to delete snapshot: $snapshot_id"
    fi
done
