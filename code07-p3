#!/bin/bash

# Set the desired tag key and value
TAG_KEY="your_tag_key"
TAG_VALUE="your_tag_value"

# Retrieve the list of snapshots with the specified tag key and value
SNAPSHOT_INFO=$(aws ec2 describe-snapshots --filters "Name=tag:${TAG_KEY},Values=${TAG_VALUE}" --output json)

# Initialize arrays to store unassigned snapshots and their creation dates
UNASSIGNED_SNAPSHOT_IDS=()
UNASSIGNED_SNAPSHOT_DATES=()

# Iterate over each snapshot
while IFS=$'\n' read -r line; do
  # Extract the snapshot ID and volume ID
  SNAPSHOT_ID=$(echo "$line" | jq -r '.SnapshotId')
  VOLUME_ID=$(echo "$line" | jq -r '.VolumeId')

  # Check if the snapshot is unassigned
  if [[ -z "$VOLUME_ID" ]]; then
    # Get the creation date of the snapshot
    CREATION_DATE=$(echo "$line" | jq -r '.StartTime')

    # Calculate the timestamp for two days ago
    TWO_DAYS_AGO=$(date -u -d "2 days ago" +%Y-%m-%dT%H:%M:%SZ)

    # Check if the snapshot was created more than two days ago
    if [[ "$CREATION_DATE" < "$TWO_DAYS_AGO" ]]; then
      # Store the unassigned snapshot ID and creation date
      UNASSIGNED_SNAPSHOT_IDS+=("$SNAPSHOT_ID")
      UNASSIGNED_SNAPSHOT_DATES+=("$CREATION_DATE")
    fi
  fi
done <<< "$SNAPSHOT_INFO"

# Print the unassigned snapshots as a table
echo "Unassigned Snapshots:"
printf "%-15s %s\n" "Snapshot ID" "Creation Date"
for ((i = 0; i < ${#UNASSIGNED_SNAPSHOT_IDS[@]}; i++)); do
  printf "%-15s %s\n" "${UNASSIGNED_SNAPSHOT_IDS[$i]}" "${UNASSIGNED_SNAPSHOT_DATES[$i]}"
done

# Delete the unassigned snapshots
echo "Deleting Unassigned Snapshots..."
for SNAPSHOT_ID in "${UNASSIGNED_SNAPSHOT_IDS[@]}"; do
  aws ec2 delete-snapshot --snapshot-id "$SNAPSHOT_ID"
  if [[ $? -eq 0 ]]; then
    echo "Snapshot $SNAPSHOT_ID deleted successfully."
  else
    echo "Error deleting snapshot $SNAPSHOT_ID."
  fi
done
