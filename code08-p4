#!/bin/bash

# Set the desired tag key and value
TAG_KEY="your_tag_key"
TAG_VALUE="your_tag_value"

# Retrieve the list of snapshots with the specified tag key and value
SNAPSHOT_INFO=$(aws ec2 describe-snapshots --filters "Name=tag:${TAG_KEY},Values=${TAG_VALUE}" --output json)

# Save the list of snapshots in a variable
SNAPSHOT_LIST=$(echo "$SNAPSHOT_INFO" | jq -r '.Snapshots')

# Create an array to store unassigned snapshots
UNASSIGNED_SNAPSHOTS=()

# Iterate over each snapshot
while IFS= read -r snapshot; do
  # Extract the snapshot ID and volume ID
  SNAPSHOT_ID=$(echo "$snapshot" | jq -r '.SnapshotId')
  VOLUME_ID=$(echo "$snapshot" | jq -r '.VolumeId')

  # Check if the snapshot is unassigned
  if [[ -z "$VOLUME_ID" ]]; then
    UNASSIGNED_SNAPSHOTS+=("$snapshot")
  fi
done <<< "$SNAPSHOT_LIST"

# Calculate the timestamp for two days ago
TWO_DAYS_AGO=$(date -u -d "2 days ago" +%Y-%m-%dT%H:%M:%SZ)

# Print the unassigned snapshots created two days before today in table format
echo "Unassigned Snapshots created two days ago:"
echo "----------------------------------------"
echo "Snapshot ID | Creation Date"
echo "------------|--------------"
for snapshot in "${UNASSIGNED_SNAPSHOTS[@]}"; do
  SNAPSHOT_ID=$(echo "$snapshot" | jq -r '.SnapshotId')
  CREATION_DATE=$(echo "$snapshot" | jq -r '.StartTime')

  if [[ "$CREATION_DATE" < "$TWO_DAYS_AGO" ]]; then
    echo "$SNAPSHOT_ID | $CREATION_DATE"
  fi
done

# Delete the unassigned snapshots created two days before today
for snapshot in "${UNASSIGNED_SNAPSHOTS[@]}"; do
  SNAPSHOT_ID=$(echo "$snapshot" | jq -r '.SnapshotId')
  CREATION_DATE=$(echo "$snapshot" | jq -r '.StartTime')

  if [[ "$CREATION_DATE" < "$TWO_DAYS_AGO" ]]; then
    echo "Deleting snapshot: $SNAPSHOT_ID"
    aws ec2 delete-snapshot --snapshot-id "$SNAPSHOT_ID"
  fi
done
